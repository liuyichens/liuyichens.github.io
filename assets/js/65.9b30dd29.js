(window.webpackJsonp=window.webpackJsonp||[]).push([[65],{553:function(s,a,t){"use strict";t.r(a);var e=t(31),r=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"运算符"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#运算符"}},[s._v("#")]),s._v(" 运算符")]),s._v(" "),t("p",[s._v("计算机最基本的操作就是执行运算，执行运算时就需要使用运算符来操作。JavaScript按照使用场景的不同分成了很多种类型")]),s._v(" "),t("ul",[t("li",[s._v("算术运算符")]),s._v(" "),t("li",[s._v("赋值运算符")]),s._v(" "),t("li",[s._v("关系/比较运算符")]),s._v(" "),t("li",[s._v("逻辑运算符")])]),s._v(" "),t("h2",{attrs:{id:"运算元"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#运算元"}},[s._v("#")]),s._v(" 运算元")]),s._v(" "),t("p",[s._v("运算元是运算符应用的对象，例如 5* 2 有两个运算元5和2，也称为参数。如果一个运算符对应的只有一个运算元，那么它是一元运算符，例如一元运算符负号"),t("code",[s._v("-")]),s._v("，其作用是对数字进行正负转换。如果一个运算符拥有两个运算元，那么就是二元运算符。")]),s._v(" "),t("h2",{attrs:{id:"javascript中的运算"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#javascript中的运算"}},[s._v("#")]),s._v(" JavaScript中的运算")]),s._v(" "),t("h3",{attrs:{id:"算术运算符"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#算术运算符"}},[s._v("#")]),s._v(" 算术运算符")]),s._v(" "),t("ul",[t("li",[s._v("算术运算符用在数学表达式中，")]),s._v(" "),t("li",[s._v("算术运算符是对数据进行计算的符号")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.staticaly.com/gh/liuyichens/blog_img@main/image.4owgpclld0g0.webp",alt:"image"}})]),s._v(" "),t("h3",{attrs:{id:"取余-和求幂"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#取余-和求幂"}},[s._v("#")]),s._v(" 取余(%)和求幂")]),s._v(" "),t("p",[s._v("取余运算符是"),t("code",[s._v("%")]),s._v("，例如"),t("code",[s._v("console.log(10 % 3) // 1")])]),s._v(" "),t("p",[s._v("求幂运算"),t("code",[s._v("a ** b")]),s._v("将a提升至a的b次幂，也称为a的b次方")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("**")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("**")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h3",{attrs:{id:"赋值运算符"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#赋值运算符"}},[s._v("#")]),s._v(" 赋值运算符")]),s._v(" "),t("p",[t("code",[s._v("=")]),s._v("实际也是一个运算符，被称之为赋值运算符")]),s._v(" "),t("p",[s._v("语句 x=value 将值value写入x然后返回x")]),s._v(" "),t("blockquote",[t("p",[s._v("链式赋值")])]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\na "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" b "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" c "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 4")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("ul",[t("li",[s._v("链式赋值从右到左进行计算")]),s._v(" "),t("li",[s._v("先对最右边的 2+2 求值，然后将其赋值给左边的变量 c , b, a")]),s._v(" "),t("li",[s._v("最后所有的变量共享一个值")])]),s._v(" "),t("h3",{attrs:{id:"原地赋值"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#原地赋值"}},[s._v("#")]),s._v(" 原地赋值")]),s._v(" "),t("p",[s._v("原地赋值：经常需要对一个变量做运算，并将新的结果存储在同一个变量中")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 原地修改")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" n "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("\nn "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" n "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("\nn "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" n "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("使用"),t("code",[s._v("+=")]),s._v("，"),t("code",[s._v("*=")]),s._v("修改")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" n "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("\nn "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("\nn "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v('所有的算术和位运算符都有简短的"修改并赋值"运算符 /= 和 -= 等。')]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.staticaly.com/gh/liuyichens/blog_img@main/image.od8cw4k17q8.webp",alt:"image"}})]),s._v(" "),t("h3",{attrs:{id:"自增和自减"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#自增和自减"}},[s._v("#")]),s._v(" 自增和自减")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("自增 (++)将变量加1")])]),s._v(" "),t("li",[t("p",[s._v("自减 (--) 将变量减1")])]),s._v(" "),t("li",[t("p",[s._v("自增和自减只能应用于变量，将其应用于数值(比如5++)则会报错。")])]),s._v(" "),t("li",[t("p",[s._v("++或者-- 可以置于变量前，也可以置于变量后")])]),s._v(" "),t("li",[t("p",[s._v("只有使用++或者--的返回值才能看到区别")])]),s._v(" "),t("li",[t("p",[s._v("前置形式返回一个新的值，后置返回的是原来的值。")])])]),s._v(" "),t("h3",{attrs:{id:"比较运算符"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#比较运算符"}},[s._v("#")]),s._v(" 比较运算符")]),s._v(" "),t("p",[s._v("在JavaScript中，"),t("strong",[s._v("比较运算符的结果都是Boolean类型的")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.staticaly.com/gh/liuyichens/blog_img@main/image.4fx7fuytfpq0.webp",alt:"image"}})]),s._v(" "),t("h2",{attrs:{id:"运算符的优先级"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#运算符的优先级"}},[s._v("#")]),s._v(" 运算符的优先级")]),s._v(" "),t("p",[s._v("运算符放到一起时会有一定的优先级，优先级决定了表达式中运算执行的先后顺序。对应的MDN文档。")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Operator_Precedence"}},[s._v("https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Operator_Precedence")])]),s._v(" "),t("h2",{attrs:{id:"和-的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#和-的区别"}},[s._v("#")]),s._v(" "),t("code",[s._v("===")]),s._v("和"),t("code",[s._v("==")]),s._v("的区别")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("普通的相等性检查"),t("code",[s._v("==")]),s._v("存在一个问题，它不能区分出0和false，或者空字符串和false这类运算；这是因为在比较不同类型的值时，处于判断符号 == 两侧的值会被先转换为数字；空字符串和false也是如此，转换为数字后都为数字1")])]),s._v(" "),t("li",[t("p",[s._v("如果需要区分0和false，需要使用严格相等运算符 "),t("code",[s._v("===")]),s._v("在进行比较时不会做任何的类型转换；即如果a和b属于不同的数据类型，那么a === b不会做任何的类型转换而立刻返回false")])]),s._v(" "),t("li",[t("p",[s._v("“不相等”表示为 "),t("code",[s._v("!=")]),s._v("，“严格不相等”表示为"),t("code",[s._v("!==")])])]),s._v(" "),t("li",[t("p",[s._v("严格的相等运算符降低了犯错的可能性。")])]),s._v(" "),t("li",[t("p",[s._v("null比较特殊，null在进行比较的时候，应该是会被当成一个对象和原生类型的比较。")])]),s._v(" "),t("li",[t("p",[s._v("对象类型一般返回false")]),s._v(" "),t("p",[s._v("当对象类型和基本类型(==)比较时，对象类型会通过"),t("code",[s._v("toPrimitive()")]),s._v("函数转化后比较，例如")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" info "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'zs'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("age")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("123")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" info"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("但是如果重写对象中的"),t("code",[s._v("toPrimitive")]),s._v("函数，让其结果为123，那么==比较的结果就是true")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" info "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'zs'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("age")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("Symbol"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("toPrimitive"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("123")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("123")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" info"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])])])]),s._v(" "),t("h2",{attrs:{id:"代码块"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#代码块"}},[s._v("#")]),s._v(" 代码块")]),s._v(" "),t("p",[s._v("代码块是多行执行代码的集合，通过一个"),t("code",[s._v("{}")]),s._v("放到一起。")]),s._v(" "),t("h2",{attrs:{id:"if分支语句"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#if分支语句"}},[s._v("#")]),s._v(" if分支语句")]),s._v(" "),t("p",[s._v('if(...)语句会计算圆括号内的表达式，并将计算结果转换为布尔型，转换规则和Boolean函数的规则一致；数字0、空字符串、""、null、undefined和NaN都会被转换成false，因为它们被称为假值；其他值被转换为true，它们被称为真值。')]),s._v(" "),t("h2",{attrs:{id:"逻辑运算符"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#逻辑运算符"}},[s._v("#")]),s._v(" 逻辑运算符")]),s._v(" "),t("p",[s._v("逻辑运算符主要有三个："),t("code",[s._v("||")]),s._v("(或)，"),t("code",[s._v("&&")]),s._v("(与)，"),t("code",[s._v("!")]),s._v("(非)。这些运算符可以组合到一起获取到最终的结果")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.staticaly.com/gh/liuyichens/blog_img@main/image.5e2mm74bx4k0.webp",alt:"image"}})]),s._v(" "),t("h3",{attrs:{id:"逻辑或的本质"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#逻辑或的本质"}},[s._v("#")]),s._v(" 逻辑或的本质")]),s._v(" "),t("p",[t("code",[s._v("||")]),s._v('表示"或"运算，"或"运算从左到右依次计算操作，处理每一个操作数时，都将其转换为布尔值，如果处理结果是true，就停止计算，返回这个操作数的初始值，如果所有的操作数都被计算过，则返回最后一个操作数。')]),s._v(" "),t("blockquote",[t("p",[s._v("注意：返回值是操作数的初始形式，不会转换为Boolean类型")])]),s._v(" "),t("h3",{attrs:{id:"逻辑与的本质"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#逻辑与的本质"}},[s._v("#")]),s._v(" 逻辑与的本质")]),s._v(" "),t("p",[t("code",[s._v("&&")]),s._v("表示“与”运算，从左到右一次计算操作数，在处理每一个操作数时，都将其转换为布尔值，如果结果是false，就停止计算，并返回这个操作数的初始值，如果所有的操作数据都被计算过，则返回最后一个操作数。即与运算返回第一个假值，如果没有假值就返回最后一个值。")]),s._v(" "),t("h3",{attrs:{id:"非运算"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#非运算"}},[s._v("#")]),s._v(" 非运算")]),s._v(" "),t("p",[s._v("逻辑非运算符接受一个参数，分为两步计算：")]),s._v(" "),t("ol",[t("li",[s._v("将操作数转化为布尔类型，true/false")]),s._v(" "),t("li",[s._v("返回相反的值")])]),s._v(" "),t("p",[s._v("两个非运算符(!!)有时候用来将某个值转化为布尔类型。第一个非运算将该值转换为布尔类型并取反，第二个非运算再次取反，最后就得到了任意布尔值的转化")])])}),[],!1,null,null,null);a.default=r.exports}}]);